<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>